<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>